<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>